<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>